<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>